<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>